<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>